<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>